<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>